<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>